<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>